<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>